<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>